<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>